<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>